<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>